<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>